<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>